<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>